<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>